<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>